<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>